<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>